<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>